<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>